<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>